<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>